<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>